<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>